<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>